<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>